<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>